<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>